<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>